<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>